<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>